<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>